<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>